<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>